<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>